<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>